<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>